<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>